<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>